<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>